<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>